<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>